<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>